<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>